<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>